<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>